<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>